<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>